<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>